<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>